<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>